<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>